<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>